<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>